<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>